<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>